<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>